<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>